<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>